<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>